<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>